<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>